<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>